<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>